<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>